<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>